<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>